<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>